<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>